<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>